<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>